<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>